<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>